<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>